<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>